<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>